<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>